<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>